<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>